<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>